<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>